<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>